<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>